<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>